<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>